<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>